<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>